<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>